<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>